<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>